<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>